<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>